<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>